<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>